<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>